<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>